<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>